<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>